<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>